<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>